<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>